<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>